<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>